<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>